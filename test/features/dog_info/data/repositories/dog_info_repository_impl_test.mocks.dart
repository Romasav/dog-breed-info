// Mocks generated by Mockito 5.4.4 from annotations
// in test_project/test/features/dog_info/data/repositories/dog_info_repository_impl_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:mockito/mockito.dart' as _i1;
import 'package:test_project/features/dog_info/data/data_sources/dog_info_api_data_source.dart'
    as _i3;
import 'package:test_project/features/dog_info/data/models/api_dog_info_model.dart'
    as _i2;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeApiDogInfoModel_0 extends _i1.SmartFake
    implements _i2.ApiDogInfoModel {
  _FakeApiDogInfoModel_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DogInfoApiDataSource].
///
/// See the documentation for Mockito's code generation for more information.
class MockDogInfoApiDataSource extends _i1.Mock
    implements _i3.DogInfoApiDataSource {
  @override
  _i4.Future<_i2.ApiDogInfoModel> getSpecificDogInfo(String? breed) =>
      (super.noSuchMethod(
        Invocation.method(
          #getSpecificDogInfo,
          [breed],
        ),
        returnValue:
            _i4.Future<_i2.ApiDogInfoModel>.value(_FakeApiDogInfoModel_0(
          this,
          Invocation.method(
            #getSpecificDogInfo,
            [breed],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ApiDogInfoModel>.value(_FakeApiDogInfoModel_0(
          this,
          Invocation.method(
            #getSpecificDogInfo,
            [breed],
          ),
        )),
      ) as _i4.Future<_i2.ApiDogInfoModel>);

  @override
  _i4.Future<_i2.ApiDogInfoModel> getRandomDogInfo() => (super.noSuchMethod(
        Invocation.method(
          #getRandomDogInfo,
          [],
        ),
        returnValue:
            _i4.Future<_i2.ApiDogInfoModel>.value(_FakeApiDogInfoModel_0(
          this,
          Invocation.method(
            #getRandomDogInfo,
            [],
          ),
        )),
        returnValueForMissingStub:
            _i4.Future<_i2.ApiDogInfoModel>.value(_FakeApiDogInfoModel_0(
          this,
          Invocation.method(
            #getRandomDogInfo,
            [],
          ),
        )),
      ) as _i4.Future<_i2.ApiDogInfoModel>);
}
